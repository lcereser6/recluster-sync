/*
Copyright 2025 LC.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	reclustercomv1alpha1 "github.com/lcereser6/recluster-sync/apis/recluster.com/v1alpha1"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// RcnodeLister helps list Rcnodes.
// All objects returned here must be treated as read-only.
type RcnodeLister interface {
	// List lists all Rcnodes in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*reclustercomv1alpha1.Rcnode, err error)
	// Rcnodes returns an object that can list and get Rcnodes.
	Rcnodes(namespace string) RcnodeNamespaceLister
	RcnodeListerExpansion
}

// rcnodeLister implements the RcnodeLister interface.
type rcnodeLister struct {
	listers.ResourceIndexer[*reclustercomv1alpha1.Rcnode]
}

// NewRcnodeLister returns a new RcnodeLister.
func NewRcnodeLister(indexer cache.Indexer) RcnodeLister {
	return &rcnodeLister{listers.New[*reclustercomv1alpha1.Rcnode](indexer, reclustercomv1alpha1.Resource("rcnode"))}
}

// Rcnodes returns an object that can list and get Rcnodes.
func (s *rcnodeLister) Rcnodes(namespace string) RcnodeNamespaceLister {
	return rcnodeNamespaceLister{listers.NewNamespaced[*reclustercomv1alpha1.Rcnode](s.ResourceIndexer, namespace)}
}

// RcnodeNamespaceLister helps list and get Rcnodes.
// All objects returned here must be treated as read-only.
type RcnodeNamespaceLister interface {
	// List lists all Rcnodes in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*reclustercomv1alpha1.Rcnode, err error)
	// Get retrieves the Rcnode from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*reclustercomv1alpha1.Rcnode, error)
	RcnodeNamespaceListerExpansion
}

// rcnodeNamespaceLister implements the RcnodeNamespaceLister
// interface.
type rcnodeNamespaceLister struct {
	listers.ResourceIndexer[*reclustercomv1alpha1.Rcnode]
}
