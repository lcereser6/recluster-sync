/*
Copyright 2025 LC.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// RcPolicyStatusApplyConfiguration represents a declarative configuration of the RcPolicyStatus type for use
// with apply.
type RcPolicyStatusApplyConfiguration struct {
	MatchedPods  *int32   `json:"matchedPods,omitempty"`
	RejectedPods *int32   `json:"rejectedPods,omitempty"`
	LastResolved *v1.Time `json:"lastResolved,omitempty"`
	LastFeedSync *v1.Time `json:"lastFeedSync,omitempty"`
}

// RcPolicyStatusApplyConfiguration constructs a declarative configuration of the RcPolicyStatus type for use with
// apply.
func RcPolicyStatus() *RcPolicyStatusApplyConfiguration {
	return &RcPolicyStatusApplyConfiguration{}
}

// WithMatchedPods sets the MatchedPods field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the MatchedPods field is set to the value of the last call.
func (b *RcPolicyStatusApplyConfiguration) WithMatchedPods(value int32) *RcPolicyStatusApplyConfiguration {
	b.MatchedPods = &value
	return b
}

// WithRejectedPods sets the RejectedPods field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the RejectedPods field is set to the value of the last call.
func (b *RcPolicyStatusApplyConfiguration) WithRejectedPods(value int32) *RcPolicyStatusApplyConfiguration {
	b.RejectedPods = &value
	return b
}

// WithLastResolved sets the LastResolved field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the LastResolved field is set to the value of the last call.
func (b *RcPolicyStatusApplyConfiguration) WithLastResolved(value v1.Time) *RcPolicyStatusApplyConfiguration {
	b.LastResolved = &value
	return b
}

// WithLastFeedSync sets the LastFeedSync field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the LastFeedSync field is set to the value of the last call.
func (b *RcPolicyStatusApplyConfiguration) WithLastFeedSync(value v1.Time) *RcPolicyStatusApplyConfiguration {
	b.LastFeedSync = &value
	return b
}
