#deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "recluster-sync.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ include "recluster-sync.name" . }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "recluster-sync.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "recluster-sync.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ include "recluster-sync.fullname" . }}
      containers:
        - name: controller
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: IfNotPresent
          #args:
          #  - --webhook-cert-path={{ .Values.webhook.tls.certPath }}
          #  - --webhook-cert-name={{ .Values.webhook.tls.certName }}
          #  - --webhook-cert-key={{ .Values.webhook.tls.keyName }}
          ports:
            - name: https-webhook
              containerPort: 9443
          env:
            - name: RECLUSTER_BACKEND_MODE
              value: "{{ .Values.image.mode }}"
            - name: LOG_LEVEL
              value: "info"
          volumeMounts:
            - name: webhook-certs
              mountPath: /tmp/k8s-webhook-server/serving-certs
              readOnly: true
          resources:
            limits: { cpu: 100m, memory: 128Mi }
            requests: { cpu: 50m, memory: 64Mi }
      volumes:
        - name: webhook-certs
          secret:
            secretName: {{ .Values.webhook.tls.secretName }}